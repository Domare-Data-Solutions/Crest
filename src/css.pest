
Css = { Rule* }

Rule = { Selector ~ "{" ~ Property* ~ "}" }

Selector = { ComplexSelector | Combination | CompoundSelector }
    ComplexSelector = { CompoundSelector ~ (Combinator ~ CompoundSelector)+ }
    Combination = { CompoundSelector ~ Combinator ~ CompoundSelector }
        Combinator = { NextSibling | Child | Column | SubsequentSibling | Descendent | Namespace }
            NextSibling         = { WHITESPACE ~ "+" ~ WHITESPACE }
            Child               = { WHITESPACE ~ ">" ~ WHITESPACE }
            Column              = { WHITESPACE ~ "||" ~ WHITESPACE }
            SubsequentSibling   = { WHITESPACE ~ "~" ~ WHITESPACE }
            Namespace           = { WHITESPACE ~ "|" ~ WHITESPACE }
            Descendent          = { " " }
    CompoundSelector = { SimpleSelector ~ ("," ~ SimpleSelector)* }
    // TODO: Implement { Attribute, Pseudoclass, Pseudoelement } Simple Selectors
    SimpleSelector = { BasicSelector* }
        BasicSelector = { TypeSelector | ClassSelector | IdSelector | UniversalSelector }
            IdSelector = { "#" ~ !("#") ~ BasicSelector }
            ClassSelector = { "." ~ !(".") ~ BasicSelector }
            TypeSelector = { Identifier }
            UniversalSelector = { "*" }

Property = { Identifier ~ ":" ~ Value ~ ";" }

Value = { ((Function | Number | Identifier | String | Hex) ~ ("," ~ Value)*)+ }
    Function = { Identifier ~ "(" ~ Value ~ ")" }
    Hex = @{ "#" ~ ASCII_DIGIT{6} }
    String = { ("\"" ~ (!("\"") ~ ASCII)* ~ "\"") | ("'" ~ (!("'") ~ ASCII)* ~ "'") }
    Number = { ( ("+"|"-")? ~ (Float | Int) ~ Unit)
             | ( ("+"|"-")? ~ (Float | Int)) }
        Int = { ASCII_DIGIT+ }
        Float = { ASCII_DIGIT+ ~ "." ~ ASCII_DIGIT+ }
        Unit = { ("cm"|"mm"|"in"|"px"|"pt"|"pc") | ("em"|"ex"|"ch"|"rem"|"vw"|"vh"|"vmin"|"vmax"|"%") }

Identifier = _{ (ASCII_ALPHA|"_"|"-") ~ (ASCII_ALPHANUMERIC|"_"|"-")* }

WHITESPACE = _{ (" " | "\t" | NEWLINE) }
COMMENT = _{ "/*" ~ (!"*/" ~ ANY)* ~ "*/" }
